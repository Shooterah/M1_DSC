*****************************************************************************************************
EXERCICE 1

o | u == -(o ^ u)
________________________________________________________
(1) -p == p | p ?

p		-(p ^ p)	-p
0		1				1
1		0				0

==> Yes equivalent (-p == p|p)
________________________________________________________
(2) p => q == p|(q|q) ?

p	q		p => q		-(p ^ -(q ^ q)) == (-p v (q ^ q))
0	0			1									1
0	1			1									1
1	0			0									0
1	1			1									1

==> Yes equivalent
________________________________________________________
(3) p => q == p|(p|q) ?

p	q		p => q			-(p ^ -(p ^ q))
0	0			1						 1
0	1			1						 1
1	0			0				 		 0
1	1			1						 1

==> Yes equivalent
________________________________________________________
(4) p ^ q == (p|q)|(p|q) ?

p	q		p ^ q	 		-(-(p ^ q) ^ -(p ^ q))
0	0		  0 							0
0	1		  0							0
1	0		  0							0
1	1		  1							1

==> Yes equivalent
________________________________________________________
(5) p v q == (p|p)|(q|q)

p	q		p v q	 		-(-(p ^ p) ^ -(q ^ q))
0	0		  0 							0
0	1		  1							1
1	0		  1							1
1	1		  1							1

==> Yes equivalent

*****************************************************************************************************
EXERCICE 2
_______________________________________________________________________________________
(1) (p => q) => (-q => -p)
		-(p => q) v (-q => -p)
		-(-p v q) v (q v -p)
		(p ^ -q) v (q v -p)
		(p v q v -p) ^ (-q v q v -p)
		{p, q, -p}, {-q, q, -p} ==> Cannot do anything with this so not Unsatisfiable

	Negation : -((p => q) => (-q => -p))
		-(-(p => q) v (-q => -p))
		-(-(-p v q) v (q v -p))
		-((p ^ -q) v (q v -p))
		(-p v q) ^ -q ^ p
		{-p, q}, {-q}, {p} ==> {-p, q} + {p} = {q} ==> {q} + {-q} = {} ==> SATISFIABLE
_______________________________________________________________________________________
(2) (((p v -q) ^ (r v q)) => (p v r))
		(-((p v -q) ^ (r v q)) v (p v r))
		(-p ^ q) v (-r ^ -q) v (p v r)
		(-p v -r v p v r) ^ (q v -r v p v r) ^ (-p v -q v p v r) ^ (q v -q v p v r)
		{-p, -r, p, r}, {q, -r, p, r}, {-p, -q, p, r}, {q, -q, p, r} 
		==> Cannot do anything with this so not Unsatisfiable

	Negation : -((((p v -q) ^ (r v q)) => (p v r)))
			   -((-((p v -q) ^ (r v q)) v (p v r)))
			   -((-p ^ q) v (-r ^ -q) v (p v r))
			   (p v -q) ^ (r v q) ^ -p ^ -r
			   {p, -q}, {r, q}, {-p}, {-r} 
			   ==> {p, -q} + {r, q} ==> {p, r} + {-p} ==> {r} + {-r} ==> {} SATISFIABLE


_______________________________________________________________________________________
(3)
.......

_______________________________________________________________________________________
(4)
.......

_______________________________________________________________________________________
(5)
.......
_______________________________________________________________________________________
*****************************************************************************************************
EXERCICE 3
_______________________________________________________________________________________

_______________________________________________________________________________________

*****************************************************************************************************
EXERCICE 4
_______________________________________________________________________________________
Constants :

[mdb] = Mary take the course on database
[mal] = Mary take the course on algorithm
[mmf] = Mary master the fundamental unit
[mccc] = Mary can continue in computer science
[jal] = John take the course on algorithm
[jma] = John take the course on maths
[jcm] = John can continue in maths
[mgj] = Mary can have a good job
[mem] = Mary can earn money
[jih] = John is happy
[jdm] = John wants to danse with Mary
[mjh] = Marry see John is happy
[mdj] = Mary wants to danse with John
[lib] = Life is beautiful

----------------------------------------------------------------------------
Propositional Logic :

(A) mdb ^ mal => mmf ^ mcc
(B) jal v jma => jcm
(C) mcc => mgj ^ mem
(D) mdb ^ mal
(E) jma
(F) jma => jih ^ jdm
(G) mgj v mjh => mdj
(H) jdm ^ mdj => lib
(I) lib -> Negate -> -lib
----------------------------------------------------------------------------
 